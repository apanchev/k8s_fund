---
- name: Adding ssh key to root user
  hosts: all
  remote_user: admin

  tasks:
    - name: Adding ssh key to root user
      command: sudo cp /home/admin/.ssh/authorized_keys /root/.ssh/authorized_keys

- name: Configuring the server using root login
  hosts: all
  remote_user: root

  tasks:
    - name: Updating and upgrading packages ...
      apt:
        upgrade: yes
        update_cache: yes

    - name: Install packages (python3, docker.io ...) ...
      apt:
        update_cache: yes
        name:
          - python3
          - python3-pip
          - htop
          - whois
          - curl
          - tcpdump
          - docker.io

    - name: Install pexpect ...
      pip:
        name: pexpect

    - name: Generate password hash
      ansible.builtin.expect:
        command: mkpasswd --method=sha-512
        responses:
          (?i)password: "root_pwd"
      register: password_hash

    - name: Change password for root user
      become: true
      user:
        name: root
        password: "{{ password_hash.stdout_lines[-1] }}"

    - name: Modify ssh_config file
      lineinfile:
        path: /etc/ssh/sshd_config
        line: 'PermitRootLogin without-password'

    - name: Modify .bashrc file
      lineinfile:
        path: /root/.bashrc
        line: "{{ item }}"
      loop:
        - 'alias l="ls --color=auto"'
        - 'alias ll="ls -l --color=auto"'
        - 'alias lll="ls -la --color=auto"'

    - name: Create vim config file
      command: touch /root/.vimrc
      args:
        creates: /root/.vimrc
    
    - name: Modifying .vimrc file
      lineinfile:
        path: /root/.vimrc
        line: "{{ item }}"
      loop:
        - "set encoding=utf-8"
        - "set nu"
        - "syntax on"
        - "set cursorline"
        - "set autoindent"
        - "set smartindent"
        - "set list listchars=tab:▸\\ ,trail:·"
        - "set tabstop=2"
        - "set shiftwidth=2"

    - name: Generate SSH key ED25519
      community.crypto.openssh_keypair:
        path: /root/.ssh/id_ed25519
        type: ed25519

    - name: Set TimeZone
      community.general.timezone:
        name: Europe/Paris


    - name: Add Kubernetes apt key
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg

    - name: Add kubernetes repo
      ansible.builtin.apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        filename: kubernetes

    - name: Update & install kubernetes ...
      apt:
        update_cache: yes
        name:
          - kubeadm=1.21.1-00
          - kubelet=1.21.1-00
          - kubectl=1.21.1-00
          - bash-completion

    - name: Prevent kubernetes from being upgraded
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubeadm
        - kubelet
        - kubectl


##### root@cp

- name: Configuring the CP server using root login
  hosts: cp
  remote_user: root

  tasks:
    - name: Get private IP ...
      shell: ifconfig | grep inet | awk '{ print $2 }' | tr '\n' ' ' | awk '{ print $2 }'
      register: cp_ip

    - name: Add private IP to CP /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: '{{ cp_ip.stdout }} k8scp'

    - name: Push the kubeadm config file
      ansible.builtin.copy:
        src: ./config/kubeadm-config.yaml
        dest: /root/kubeadm-config.yaml

    - name: Init kubeadm
      shell: kubeadm init --config=kubeadm-config.yaml --upload-certs | tee kubeadm-init.out

##### admin@cp

- name: Configuring the CP server using admin login
  hosts: cp
  remote_user: admin

  tasks:
    - name: Modify .bashrc file
      lineinfile:
        path: $HOME/.bashrc
        line: "{{ item }}"
      loop:
        - 'alias k="kubectl"'
        - 'alias l="ls --color=auto"'
        - 'alias ll="ls -l --color=auto"'
        - 'alias lll="ls -la --color=auto"'

    - name: Create vim config file
      command: touch $HOME/.vimrc
      args:
        creates: $HOME/.vimrc

    - name: Modify .vimrc file
      lineinfile:
        path: $HOME/.vimrc
        line: "{{ item }}"
      loop:
        - "set encoding=utf-8"
        - "set nu"
        - "syntax on"
        - "set cursorline"
        - "set autoindent"
        - "set smartindent"
        - "set list listchars=tab:▸\\ ,trail:·"
        - "set tabstop=2"
        - "set shiftwidth=2"

    - name: Creating .kube directory ...
      shell: mkdir -p $HOME/.kube
    - name: Admin config copy to .kube directory ...
      shell: sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    - name: Set .kube directory ...
      shell: sudo chown $(id -u):$(id -g) $HOME/.kube/config
    - name: Add auto completion for kubectl
      shell: echo "source <(kubectl completion bash)" >> $HOME/.bashrc

    - name: Download calico file from website
      get_url:
        url: https://docs.projectcalico.org/manifests/calico.yaml
        dest: $HOME/calico.yaml
    - name: Uncomment line 1 in calico file
      replace:
        path: $HOME/calico.yaml
        regexp: '# - name: CALICO_IPV4POOL_CIDR'
        replace: '- name: CALICO_IPV4POOL_CIDR'
    - name: Uncomment line 2 in calico file
      replace:
        path: $HOME/calico.yaml
        regexp: '#   value: "192.168.0.0/16"'
        replace: '  value: "192.168.0.0/16"'

    - name: Apply Calico config to kubernetes
      shell: kubectl apply -f calico.yaml | tee kubectl_calico.log

    - name: Create new kubeadm token
      shell: sudo kubeadm token create
      register: cp_token
    
    - name: Generate sha256 ca cert hash
      shell: openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'
      register: cp_hash


##### root@workers

- name: Configuring the workers servers using root login
  hosts: workers
  remote_user: root

  tasks:
    - name: Add private IP to workers /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ hostvars[groups['cp'][0]]['cp_ip']['stdout'] }} k8scp"
    
    - name: Make server join the node
      shell: kubeadm join --token {{ hostvars[groups['cp'][0]]['cp_token']['stdout'] }} k8scp:6443 --discovery-token-ca-cert-hash sha256:{{ hostvars[groups['cp'][0]]['cp_hash'] ['stdout'] }} | tee join.log
